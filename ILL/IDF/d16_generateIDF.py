import os
path = os.path.abspath("")
import sys
sys.path.insert(0, path)
from helper import MantidGeom


# unit is metre
instrumentName = 'D16'
validFrom = "2020-01-01 00:00:00"


monochromator_source = -2.8

# 2 monitors
zMon1 = 0
zMon2 = 0

# definition of the quadratic detector
numberPixelsVertical = 320
numberPixelsHorizontal = 320

# definition of a quadratic pixel
pixelName = "pixel"
pixelWidth = 0.001
pixelHeight = 0.001
x = pixelWidth / 2.
y = pixelHeight / 2.
z = 0.
thickness = 0.0001

# detector
zPosDetector = 0  # will be moved dynamically when reading the IDF

# identification numbers
id0 = repr(0)

# rectangular detector
xstart = repr(pixelWidth * (numberPixelsHorizontal - 1) / 2)
xstep = repr(-pixelWidth)
xpixels = repr(numberPixelsHorizontal)
ystart = repr(-pixelHeight * (numberPixelsVertical - 1) / 2)
ystep = repr(pixelHeight)
ypixels = repr(numberPixelsVertical)

FF = "y"  # idfillbyfirst
SR = repr(numberPixelsVertical)  # idstepbyrow

# detector name
detector0 = "detector"

# introductory comment
comment = """
       This is the instrument definition file of the D16 high-resolution diffractometer 
       with variable vertical focusing at the ILL.
       Generated file, PLEASE DO NOT EDIT THIS FILE!
       This file was automatically generated by mantidgeometry/ILL/IDF/d16_generateIDF.py
       It has to be launched from mantidgeometry main directory.

       z axis defines the direction of the beam
       y axis will be the axis used for rotation
       coordinate system is right-handed

       y axis rotation defined by theta
       x axis rotation defined by phi
       z axis rotation defined by chi

       width x direction, height y direction

       Sample
       Typical sample dimension is 30 mm x 10 mm for diffraction and 7 mm x 7 mm for high resolution SANS.

       One detector
       Distance to sample: 0.3 to 1 m
       Single panel mono-block: 320 mm x 320 mm
       Rotation: -5 < 2*theta < 125
       Pixel size 1 x 1 mm^2 ( 320 x 320 pixels )

       For more information, please visit
       https://www.ill.eu/instruments-support/instruments-groups/instruments/d16/characteristics/
       """


# Instrument creation
d16 = MantidGeom(instrumentName, comment=comment, valid_from=validFrom)
d16.addSnsDefaults(default_view='3D', axis_view_3d='z-')

d16.addComment("SOURCE")
d16.addComponentILL("monochromator", 0., 0., monochromator_source, "Source")

# Sample is set as the origin
d16.addComment("Sample position")
d16.addComponentILL("sample_position", 0., 0., 0., "SamplePos")

d16.addComment("MONITORS")
d16.addMonitors(names=["monitor1", "monitor2"], distance=[zMon1, zMon2])
d16.addComment("MONITOR SHAPE")
d16.addDummyMonitor(0.01, 0.01)
d16.addComment("MONITOR IDs")
d16.addMonitorIds([repr(500000), repr(500001)])

d16.addComment("DETECTOR")
d16.addComponentRectangularDetector(detector0, 0., 0., -zPosDetector, idstart=id0, idfillbyfirst=FF, idstepbyrow=SR)
d16.addRectangularDetector(detector0, pixelName, xstart, xstep, xpixels, ystart, ystep, ypixels)

d16.addComment("PIXEL, EACH PIXEL IS A DETECTOR")
d16.addCuboidPixel(pixelName, [-x, -y, thickness/2.], [-x, y, thickness/2.], [-x, -y, -thickness/2.], [x, -y, -thickness/2.], shape_id="pixel-shape")

d16.writeGeom("./ILL/IDF/" + instrumentName + "_Definition.xml")
