
import sys
sys.path.insert(1, "../../")
from helper import MantidGeom

# using metre as unit
instrumentName = 'D33'
validFrom = "2017-10-01 23:59:59"
moderator_source = -22
# 2 Monitors
zMon1 = -16.7
zMon2 = -1.2
# factor: 2 standard resolution
factor = 2
# definition of the quadratic detector
numberPixelsRearVertical = 128
numberPixelsRearHorizontal = 128 * factor
numberPixelsFront = 32
# definition of a quadratic pixel
pixelName = "pixel"
pixelWidth = 0.005 / factor
pixelHeight = 0.005
x = pixelWidth / 2.
y = pixelHeight / 2.
z = 0.
thickness = repr(-0.0001)
# rear detector
zPosRear = 12.8
# front detector
zFront = 1.2
dF = 0.08  # 160/2 mm half of the front detector's width
dR = 0.32  # 640/2 mm half of the rear detector's width
# start identification numbers
id0 = repr(0)  # rear back detector
id1 = repr(100000)  # front right detector
id2 = repr(200000)  # front left detector
id3 = repr(300000)  # front bottom detector
id4 = repr(400000)  # front top detector
# rectangular detector
xstart = repr(-pixelWidth * (numberPixelsRearHorizontal - 1) / 2)
xstep = repr(pixelWidth)
xpixels = repr(numberPixelsRearHorizontal)
ystart = repr(-pixelHeight * (numberPixelsRearVertical - 1) / 2)
ystep = repr(pixelHeight)
ypixels = repr(numberPixelsRearVertical)
pixelsFront = repr(numberPixelsFront)
startFront = repr(-pixelHeight * (numberPixelsFront - 1) / 2)
# Choose either FF = "x", SR = repr(numberPixelsRearHorizontal) or FF = "y", SR = repr(numberPixelsRearVertical)
FF = "y"  # idfillbyfirst
SR = repr(numberPixelsRearVertical)  #idstepbyrow
detector0 = "back_detector"
detector1 = "front_detector_right"
detector2 = "front_detector_left"
detector3 = "front_detector_bottom"
detector4 = "front_detector_top"

comment = """ This is the instrument definition file of the D33 Massive dynamic q-range small-angle diffractometer
       at the ILL.
       Generated file, PLEASE DO NOT EDIT THIS FILE!
       This file was automatically generated by mantidgeometry/ILL/IDF/d33_generateIDF.py

       z axis defines the direction of the beam
       y axis will be the axis used for rotation
       coordinate system is right-handed

       y axis rotation defined by theta
       x axis rotation defined by phi
       z axis rotation defined by chi

       width x direction, height y direction

       The instrument operates in two modes:
       - monochromatic (qmax/qmin = 20)
          - wavelength range 4.5 A -> 40 A
       - TOF time-of-flight (qmax/qmin > 1000)
          - wavelengths 14 A, 20 A

       Collimation
       4 movable guide sections of 2.5 m
       Beam nose at 2.8 m
       Guide cross-section of 30 x 30 mm
       Source-to-sample distances are 2.8 m; 5.3 m; 7.8 m; 10.3 m; 12.8 m
       Source aperture diameters are 5 m; 10 m; 20 m ; 30 m

       Sample
       Maximum sample dimension is 15 mm x 15 mm

       Two detector multi-tube detectors
       Sample-detector distances range from 1.2 m to 12.8 m
       Detector 1 (rear):
       Single panel mono-block size 640 x 640 mm
       Pixel size 5 x 5 mm^2 ( 128 x 128 pixels )
       Detector 2 (front):
       4-panel mono-block, size 160 x 640 mm per panel
       Pixel size 5 x 5 mm^2 ( 32 x 128 pixels )

       For more information, please visit
       https://www.ill.eu/instruments-support/instruments-groups/instruments/d33/characteristics/
       """
d33 = MantidGeom(instrumentName, comment=comment, valid_from=validFrom)
d33.addSnsDefaults()
d33.addComment("SOURCE")
d33.addComponentILL("moderator", 0., 0., moderator_source, "Source")
d33.addComment("Sample position")
d33.addComponentILL("sample_position", 0., 0., 0., "SamplePos")
d33.addComment("MONITORS")
d33.addMonitors(names=["monitor1", "monitor2"], distance=[zMon1, zMon2])
d33.addComment("MONITOR SHAPE")
d33.addComment("FIXME: Do something real here.")
d33.addDummyMonitor(0.01, 0.03)
d33.addComment("MONITOR IDs")
d33.addMonitorIds([repr(500000), repr(500001)])
d33.addComment("DETECTORS")
d33.addComment("REAR DETECTOR")
d33.addComponentRectangularDetector(detector0, 0., 0., zPosRear, idstart=id0, idfillbyfirst=FF, idstepbyrow=SR)
d33.addRectangularDetector(detector0, pixelName, xstart, xstep, xpixels, ystart, ystep, ypixels)
d33.addComment("4 FRONT DETECTORS, from detector to sample in +Z direction")
d33.addComment("RIGHT")
d33.addComponentRectangularDetector(detector1, dF+dR, 0., zFront, idstart=id1, idfillbyfirst=FF,
                                    idstepbyrow=SR, rotz=90.)
d33.addRectangularDetector(detector1, pixelName, xstart, xstep, xpixels, startFront, ystep, pixelsFront)
d33.addComment("LEFT")
d33.addComponentRectangularDetector(detector2, -dR-dF, 0., zFront, idstart=id2, idfillbyfirst=FF,
                                    idstepbyrow=SR, rotz=90.)
d33.addRectangularDetector(detector2, pixelName, xstart, xstep, xpixels, startFront, ystep, pixelsFront)
d33.addComment("BOTTOM")
d33.addComponentRectangularDetector(detector3, 0., -dF-dR, zFront, idstart=id3, idfillbyfirst=FF, idstepbyrow=SR)
d33.addRectangularDetector(detector3, pixelName, xstart, xstep, xpixels, startFront, ystep, pixelsFront)
d33.addComment("TOP")
d33.addComponentRectangularDetector(detector4, 0., dR+dF, zFront, idstart=id4, idfillbyfirst=FF, idstepbyrow=SR)
d33.addRectangularDetector(detector4, pixelName, xstart, xstep, xpixels, startFront, ystep, pixelsFront)
d33.addComment("PIXEL, EACH PIXEL IS A DETECTOR")
d33.addCuboidPixel(pixelName, [-x, -y, z], [x, y, z], [-x, -y, thickness], [x, -y, z], shape_id="pixel-shape")
d33.writeGeom("/home/cs/reimund/mantid/instrument/D33_Definition.xml")
