import os
path = os.path.abspath("")
import sys
sys.path.insert(0, path)
from helper import MantidGeom

instrumentName = 'SALSA'
validFrom = "1901-01-01 00:00:00"

# source
zSource = -2.0

# monitor
zMonitor = -1.0

# detector
detectorHeight = 0.25
detectorWidth = 0.25

# pixels
nPixelsVertical = 256
nPixelsHorizontal = 256
pixelName = "pixel"
pixelWidth = detectorWidth / nPixelsHorizontal
pixelHeight = detectorHeight / nPixelsVertical
pixelThickness = 0.0001
x = pixelWidth / 2.0
y = pixelHeight / 2.0
z = pixelThickness / 2.0
xstart = -pixelWidth * (nPixelsHorizontal - 1) / 2
xstep = pixelWidth
xpixels = nPixelsHorizontal
ystart = -pixelHeight * (nPixelsVertical - 1) / 2
ystep = pixelHeight
ypixels = nPixelsVertical

# rectangular detector
FF = "n"  # idfillbyfirst
SR = repr(nPixelsVertical)  # idstepbyrow

# introductory comment
comment = """
       This is the instrument definition file of the 
       Generated file, PLEASE DO NOT EDIT THIS FILE!
       This file was automatically generated by mantidgeometry/ILL/IDF/salsa_generateIDF.py

       For more information, please visit
       https://www.ill.eu/instruments-support/instruments-groups/instruments/salsa/characteristics/
       """

# Instrument creation
salsa = MantidGeom(instrumentName, comment=comment, valid_from=validFrom)
salsa.addSnsDefaults(default_view='spherical_y', axis_view_3d='z-', theta_sign_axis="x")

salsa.addComment("SOURCE")
salsa.addComponentILL("monochromator", 0., 0., zSource, "Source")

# Sample is set as the origin
salsa.addComment("Sample position")
salsa.addComponentILL("sample_position", 0., 0., 0., "SamplePos")

salsa.addComment("MONITORS")
salsa.addMonitors(names=["monitor"], distance=[zMonitor])
salsa.addComment("MONITOR SHAPE")
salsa.addDummyMonitor(0.01, 0.01)
salsa.addComment("MONITOR IDs")
salsa.addMonitorIds([repr(256*256)])

salsa.addComment("DETECTOR")
salsa.addComponentILL("detector", 0., 0., 0.)
detector = salsa.makeTypeElement("detector")
for i in range(256):
    salsa.addRectangularDetector("channel_" + str(i), pixelName, xstart, xstep, xpixels, 0, ystep, 1)
    salsa.addComponentRectangularDetector("channel_" + str(i), 0., -detectorHeight/2 + i * xstep, 0., idstart=str(0 + i * 256), idfillbyfirst="n", idstepbyrow=SR, root=detector)

salsa.addComment("PIXEL, EACH PIXEL IS A DETECTOR")
salsa.addCuboidPixel(pixelName, [-x, -y,  z],
                                [-x,  y,  z],
                                [-x, -y, -z],
                                [ x, -y, -z], shape_id="pixel-shape")

salsa.writeGeom(instrumentName + "_Definition.xml")
