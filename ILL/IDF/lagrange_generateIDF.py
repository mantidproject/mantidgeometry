import os
path = os.path.abspath("")
from lxml import etree as le
import sys
sys.path.insert(0, path)
from helper import MantidGeom

instrumentName = 'Lagrange'
validFrom = "1901-01-01 00:00:00"

# source
zSource = -2 # arbitrary, TOF is not calculated

# monitor
zMonitor = -1 # arbitrary, TOF is not calculated

# detector
zDetector = 1.25 # arbitrary
detectorHeight = 0.25 # arbitrary
detectorWidth = 0.25 # arbitrary

# definition of a quadratic pixel
pixelName = "pixel"
pixelWidth = detectorWidth
pixelHeight = detectorHeight
x = pixelWidth / 2.
y = pixelHeight / 2.
z = 0.
thickness = 0.0001
# rear detector
zPos = 1.2
# start identification numbers
id0 = repr(0)
# rectangular detector
xstart = repr(pixelWidth / 2)
xstep = repr(-pixelWidth)
xpixels = repr(1)
ystart = repr(-pixelHeight / 2)
ystep = repr(pixelHeight)
ypixels = repr(1)
# Choose either FF = "x", SR = repr(numberPixelsRearHorizontal) or FF = "y", SR = repr(numberPixelsRearVertical)
FF = "y"  # idfillbyfirst
SR = repr(1)  #idstepbyrow
detector0 = "detector"

# introductory comment
comment = """
       This is the instrument definition file of the 
       Generated file, PLEASE DO NOT EDIT THIS FILE!
       This file was automatically generated by mantidgeometry/ILL/IDF/lagrange_generateIDF.py

       For more information, please visit
       https://www.ill.eu/users/instruments/instruments-list/in1-taslagrange/characteristics
       """

# Instrument creation
lagrange = MantidGeom(instrumentName, comment=comment, valid_from=validFrom)

lagrange.addComment("SOURCE")
lagrange.addComponentILL('SOURCE', 0.0, 0.0, zSource, 'Source')
lagrange.addComment("Sample position")
lagrange.addComponentILL("sample_position", 0., 0., 0., "SamplePos")
lagrange.addComment("MONITORS")
lagrange.addMonitors(names=["monitor1"], distance=[zMonitor])
lagrange.addComment("MONITOR SHAPE")
lagrange.addDummyMonitor(0.01, 0.01)
lagrange.addComment("MONITOR IDs")
lagrange.addMonitorIds([repr(100000)])
lagrange.addComment("DETECTOR")
lagrange.addComponentRectangularDetector(detector0, 0., 0., zPos, idstart=id0, idfillbyfirst=FF, idstepbyrow=SR)
lagrange.addRectangularDetector(detector0, pixelName, xstart, xstep, xpixels, ystart, ystep, ypixels)
lagrange.addComment("PIXEL, EACH PIXEL IS A DETECTOR")
lagrange.addCuboidPixel(pixelName, [-x, -y, thickness/2.], [-x, y, thickness/2.], [-x, -y, -thickness/2.], [x, -y, thickness/2.], shape_id="pixel-shape")
lagrange.writeGeom(instrumentName + "_Definition.xml")
