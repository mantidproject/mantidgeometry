import os
path = os.path.abspath("")
import sys
sys.path.insert(0, path)

from helper import MantidGeom
from lxml import etree as le
import numpy as np


# # Global variables
instrumentName = 'IN5'
numberOfPixelsPerTube = 256
firstDetectorId = 1
radius = 4 # meters

# Tubes In 5: 2.95m / 241 positions = 256 - 7 pixel top - 8 pixels bottom
tubeHeight = 2.95
removedPixelsTop = 8
removedPixelsBottom = 7
# One inch diameter, 0.5mm thick walls
pixelRadius = (0.0254 - 0.001) / 2.
tubePixelStep =  tubeHeight / float(numberOfPixelsPerTube - removedPixelsTop - removedPixelsBottom)
totalTubeHeight = tubePixelStep * numberOfPixelsPerTube

# Don't touch!
azimuthalAngle = [ -11.9175,     -11.5451,     -11.1727,     -10.8003,     -10.4279,     -10.0554,     -9.68300,     -9.31058,     -8.93816,     -8.56573,     -8.19331,     -7.82089,     -7.44846,     -7.07604,     -6.70362,     -6.33119,     -5.95877,     -5.58635,     -5.21393,     -4.84150,     -4.46908,     -4.09666,     -3.72423,     -3.35181,     -2.97939,     -2.60696,     -2.23454,     -1.86212,     -1.48969,     -1.11727,    -0.744846,    -0.372423,    0.372423,     0.744847,      1.11727,      1.48969,      1.86212,      2.23454,      2.60696,      2.97939,      3.35181,      3.72423,      4.09666,      4.46908,      4.84150,      5.21393,      5.58635,      5.95877,     6.33119,      6.70362,      7.07604,      7.44846,      7.82089,      8.19331,      8.56573,      8.93816,      9.31058,      9.68300,      10.0554,      10.4279,      10.8003,      11.1727,      11.5451,      11.9175,     12.6624,      13.0348,      13.4072,      13.7797,      14.1521,      14.5245,      14.8969,      15.2694,      15.6418,      16.0142,      16.3866,      16.7590,      17.1315,      17.5039,      17.8763,      18.2487,     18.6212,      18.9936,      19.3660,      19.7384,      20.1109,      20.4833,      20.8557,      21.2281,      21.6005,      21.9730,      22.3454,      22.7178,      23.0902,      23.4627,      23.8351,      24.2075,     24.9524,      25.3248,      25.6972,      26.0696,      26.4420,      26.8145,      27.1869,      27.5593,      27.9317,      28.3042,      28.6766,      29.0490,      29.4214,      29.7939,      30.1663,      30.5387,     30.9111,      31.2836,      31.6560,      32.0284,      32.4008,      32.7732,      33.1457,      33.5181,      33.8905,      34.2629,      34.6354,      35.0078,      35.3802,      35.7526,      36.1251,      36.4975,     37.2423,      37.6147,      37.9872,      38.3596,      38.7320,      39.1044,      39.4769,      39.8493,      40.2217,      40.5941,      40.9666,      41.3390,      41.7114,      42.0838,      42.4562,      42.8287,     43.2011,      43.5735,      43.9459,      44.3184,      44.6908,      45.0632,      45.4356,      45.8081,      46.1805,      46.5529,      46.9253,      47.2978,      47.6702,      48.0426,      48.4150,      48.7874,     49.5323,      49.9047,      50.2771,      50.6496,      51.0220,      51.3944,      51.7668,      52.1393,      52.5117,      52.8841,      53.2565,      53.6289,      54.0014,      54.3738,      54.7462,      55.1186,     55.4911,      55.8635,      56.2359,      56.6083,      56.9808,      57.3532,      57.7256,      58.0980,      58.4704,      58.8429,      59.2153,      59.5877,      59.9601,      60.3326,      60.7050,      61.0774,     61.8223,      62.1947,      62.5671,      62.9395,      63.3120,      63.6844,      64.0568,      64.4292,      64.8017,      65.1741,      65.5465,      65.9189,      66.2913,      66.6638,      67.0362,      67.4086,     67.7810,      68.1535,      68.5259,      68.8983,      69.2707,      69.6432,      70.0156,      70.3880,      70.7604,      71.1328,      71.5053,      71.8777,      72.2501,      72.6225,      72.9950,      73.3674,     74.1122,      74.4846,      74.8571,      75.2295,      75.6019,      75.9743,      76.3468,      76.7192,      77.0916,      77.4640,      77.8365,      78.2089,      78.5813,      78.9537,      79.3262,      79.6986,     80.0710,      80.4434,      80.8158,      81.1883,      81.5607,      81.9331,      82.3055,      82.6780,      83.0504,      83.4228,      83.7952,      84.1677,      84.5401,      84.9125,      85.2849,      85.6573,     86.4022,      86.7746,      87.1470,      87.5195,      87.8919,      88.2643,      88.6367,      89.0092,      89.3816,      89.7540,      90.1264,      90.4989,      90.8713,      91.2437,      91.6161,      91.9885,     92.3610,      92.7334,      93.1058,      93.4782,      93.8507,      94.2231,      94.5955,      94.9679,      95.3404,      95.7128,      96.0852,      96.4576,      96.8300,      97.2025,      97.5749,      97.9473,     98.6922,      99.0646,      99.4370,      99.8094,      100.182,      100.554,      100.927,      101.299,      101.672,      102.044,      102.416,      102.789,      103.161,      103.534,      103.906,      104.279,     104.651,      105.023,      105.396,      105.768,      106.141,      106.513,      106.885,      107.258,      107.630,      108.003,      108.375,      108.748,      109.120,      109.492,      109.865,      110.237,     110.982,      111.355,      111.727,      112.099,      112.472,      112.844,      113.217,      113.589,      113.962,      114.334,      114.706,      115.079,      115.451,      115.824,      116.196,      116.568,     116.941,      117.313,      117.686,      118.058,      118.431,      118.803,      119.175,      119.548,      119.920,      120.293,      120.665,      121.038,      121.410,      121.782,      122.155,      122.527,     123.272,      123.645,      124.017,      124.389,      124.762,      125.134,      125.507,      125.879,      126.251,      126.624,      126.996,      127.369,      127.741,      128.114,      128.486,      128.858,     129.231,      129.603,      129.976,      130.348,      130.721,      131.093,      131.465,      131.838,      132.210,      132.583,      132.955,      133.328,      133.700,      134.072,      134.445,      134.817]
azimuthalAngle.reverse()

# Don't touch!
# Tube distances provided by Jacques on 26.02.2020
tubeDistances = [3.95260594, 3.95282589, 3.95304498, 3.95326322, 3.95348063,
       3.95369718, 3.9539129 , 3.95412778, 3.95434183, 3.95455502,
       3.95476737, 3.95497888, 3.95518953, 3.95539935, 3.95560831,
       3.95581644, 3.95602371, 3.95623013, 3.95643572, 3.95664045,
       3.95684434, 3.95704737, 3.95724955, 3.95745089, 3.95765137,
       3.95785101, 3.95804979, 3.95824773, 3.95844482, 3.95864105,
       3.95883643, 3.95903096, 3.95941746, 3.95960942, 3.95980053,
       3.95999079, 3.96018019, 3.96036873, 3.96055642, 3.96074325,
       3.96092922, 3.96111432, 3.96129858, 3.96148197, 3.9616645 ,
       3.96184616, 3.96202696, 3.9622069 , 3.96238599, 3.9625642 ,
       3.96274155, 3.96291804, 3.96309366, 3.96326842, 3.96344231,
       3.96361534, 3.9637875 , 3.9639588 , 3.96412923, 3.9642988 ,
       3.96446749, 3.96463532, 3.96480228, 3.96496838, 3.96529798,
       3.96546146, 3.96562409, 3.96578585, 3.96594675, 3.96610677,
       3.96626593, 3.96642422, 3.96658164, 3.96673819, 3.96689389,
       3.96704871, 3.96720266, 3.96735574, 3.96750797, 3.96765932,
       3.9678098 , 3.96795942, 3.96810817, 3.96825606, 3.96840307,
       3.96854923, 3.96869452, 3.96883893, 3.96898248, 3.96912517,
       3.969267  , 3.96940795, 3.96954804, 3.96968727, 3.96982562,
       3.96996313, 3.97023553, 3.97037044, 3.97050448, 3.97063767,
       3.97077   , 3.97090145, 3.97103206, 3.9711618 , 3.97129069,
       3.97141871, 3.97154588, 3.97167219, 3.97179765, 3.97192225,
       3.972046  , 3.9721689 , 3.97229094, 3.97241214, 3.97253248,
       3.97265198, 3.97277062, 3.97288842, 3.97300538, 3.97312148,
       3.97323675, 3.97335117, 3.97346475, 3.9735775 , 3.9736894 ,
       3.97380047, 3.9739107 , 3.97402009, 3.97423638, 3.97434328,
       3.97444935, 3.97455458, 3.97465899, 3.97476258, 3.97486533,
       3.97496726, 3.97506837, 3.97516866, 3.97526813, 3.97536677,
       3.9754646 , 3.9755616 , 3.9756578 , 3.97575317, 3.97584773,
       3.97594147, 3.9760344 , 3.97612651, 3.97621781, 3.9763083 ,
       3.97639798, 3.97648684, 3.97657489, 3.97666212, 3.97674854,
       3.97683415, 3.97691894, 3.97700292, 3.97708608, 3.97716842,
       3.97733064, 3.97741051, 3.97748955, 3.97756777, 3.97764514,
       3.97772168, 3.97779737, 3.97787221, 3.9779462 , 3.97801932,
       3.97809157, 3.97816294, 3.97823343, 3.97830301, 3.97837168,
       3.97843943, 3.97850625, 3.97857211, 3.97863701, 3.97870092,
       3.97876382, 3.9788257 , 3.97888652, 3.97894628, 3.97900493,
       3.97906246, 3.97911883, 3.97917402, 3.97922799, 3.97928073,
       3.9793322 , 3.97938238, 3.97947876, 3.97952493, 3.97956556,
       3.9796014 , 3.97963681, 3.9796718 , 3.97970639, 3.97974062,
       3.97977455, 3.97980825, 3.97984177, 3.97987519, 3.97990854,
       3.97994187, 3.97997522, 3.98000863, 3.98004211, 3.98007568,
       3.98010935, 3.98014313, 3.98017701, 3.980211  , 3.9802451 ,
       3.98027928, 3.98031355, 3.98034789, 3.98038229, 3.98041674,
       3.98045122, 3.98048572, 3.98052023, 3.98055473, 3.98062364,
       3.98065803, 3.98069236, 3.98072662, 3.98076079, 3.98079487,
       3.98082883, 3.98086268, 3.9808964 , 3.98092998, 3.98096342,
       3.9809967 , 3.98102981, 3.98106276, 3.98109553, 3.98112811,
       3.9811605 , 3.98119269, 3.98122469, 3.98125647, 3.98128804,
       3.98131939, 3.98135052, 3.98138142, 3.9814121 , 3.98144254,
       3.98147274, 3.98150271, 3.98153243, 3.98156191, 3.98159115,
       3.98162013, 3.98167735, 3.98170558, 3.98173356, 3.98176128,
       3.98178874, 3.98181595, 3.9818429 , 3.9818696 , 3.98189603,
       3.98192221, 3.98194814, 3.9819738 , 3.98199921, 3.98202436,
       3.98204926, 3.9820739 , 3.98209829, 3.98212242, 3.9821463 ,
       3.98216992, 3.9821933 , 3.98221643, 3.98223931, 3.98226194,
       3.98228432, 3.98230647, 3.98232836, 3.98235002, 3.98237144,
       3.98239262, 3.98241356, 3.98243427, 3.98247499, 3.982495  ,
       3.98251479, 3.98253435, 3.9825537 , 3.98257282, 3.98259172,
       3.9826104 , 3.98262887, 3.98264712, 3.98266516, 3.982683  ,
       3.98270063, 3.98271805, 3.98273527, 3.98275229, 3.98276911,
       3.98278574, 3.98280217, 3.9828184 , 3.98283445, 3.98285031,
       3.98286598, 3.98288147, 3.98289678, 3.9829119 , 3.98292685,
       3.98294161, 3.98295621, 3.98297063, 3.98298487, 3.98299895,
       3.98302659, 3.98304016, 3.98305357, 3.98306681, 3.9830799 ,
       3.98309282, 3.98310558, 3.98311819, 3.98313064, 3.98314293,
       3.98315507, 3.98316706, 3.9831789 , 3.98319059, 3.98320213,
       3.98321352, 3.98322477, 3.98323587, 3.98324682, 3.98325763,
       3.98326829, 3.98327883, 3.98328921, 3.98329947, 3.98330958,
       3.98331956, 3.98332939, 3.9833391 , 3.98334867, 3.98335811,
       3.98336742, 3.98337662, 3.9833946 , 3.9834034 , 3.98341209,
       3.98342064, 3.98342908, 3.9834374 , 3.98344559, 3.98345368,
       3.98346164, 3.98346949, 3.98347722, 3.98348485, 3.98349236,
       3.98349976, 3.98350706, 3.98351425, 3.98352133, 3.98352831,
       3.98353518, 3.98354196, 3.98354865, 3.98355523, 3.98356172,
       3.98356811, 3.98357441, 3.98358062, 3.98358673, 3.98359276,
       3.98359871, 3.98360456, 3.98361033, 3.98361601]

numberOfTubes = len(azimuthalAngle)
numberOfDetectors = numberOfPixelsPerTube * numberOfTubes

frameOverlapChopperZ = -2.10945
monitorZ = -0.5

comment = """ This is the instrument definition file of the IN5 spectrometer at the ILL.
       This file was automatically generated by mantidgeometry/ILL/IDF/in5_generateIDF.py
       """
validFrom = '1900-01-31 23:59:59'
geometry = MantidGeom(instrumentName, comment=comment, valid_from=validFrom)
geometry.addSnsDefaults(theta_sign_axis='x')
geometry.addComponentILL('frame-overlap_chopper', 0.0, 0.0, frameOverlapChopperZ, 'Source')
geometry.addComponentILL('sample-position', 0.0, 0.0, 0.0, 'SamplePos')
geometry.addMonitors(names=['monitor'], distance=[monitorZ])
geometry.addDummyMonitor(0.01, 0.03)
geometry.addMonitorIds(['100000'])
pixelBase = {'x': 0., 'y': -tubePixelStep / 2., 'z': 0.}
geometry.addCylinderPixelAdvanced(
    'standard_pixel', center_bottom_base=pixelBase,
    axis={'x': 0., 'y': 1., 'z': 0.}, pixel_radius=pixelRadius,
    pixel_height=tubePixelStep,
    algebra='pixel_shape')
root = geometry.getRoot()
bank = le.SubElement(root, 'type', name='bank_uniq')
tubes = le.SubElement(bank, 'component', type='standard_tube')
for index, angle in enumerate(azimuthalAngle):
    attributes = {
        'r': str(tubeDistances[index]),
        't': str(angle),
        'rot': str(angle),
        'axis-x': str(0.),
        'axis-y': str(1.),
        'axis-z': str(0.),
        'name': 'tube_{}'.format(index+1)
    }
    le.SubElement(tubes, 'location', **attributes)
tubeType = le.SubElement(root, 'type', name='standard_tube', outline='yes')
tube = le.SubElement(tubeType, 'component', type='standard_pixel')
pixelPositions = np.linspace(-totalTubeHeight/2., totalTubeHeight/2., numberOfPixelsPerTube)
for pos in pixelPositions:
    le.SubElement(tube, 'location', y=str(pos))
detectors = geometry.addComponent('detectors', idlist='detectors')
le.SubElement(detectors, 'location')
detectorType = le.SubElement(root, 'type', name='detectors')
bankComponent = le.SubElement(detectorType, 'component', type='bank_uniq')
le.SubElement(bankComponent, 'location')
geometry.addDetectorIds('detectors', [1, 98304, None])
geometry.writeGeom("./ILL/IDF/" + instrumentName + "_Definition.xml")
